version: '3.8'

services:
  pg_db:
    image: postgres:14.2
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - pg_volume:/pgdata
    ports:
      - "5432:5432"
    networks:
      - backend_network

  pg_db_1:
    image: postgres:14.2
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - pg_volume_1:/pgdata
    ports:
      - "5433:5432"
    networks:
      - backend1_network

  pg_db_2:
    image: postgres:14.2
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - pg_volume_2:/pgdata
    ports:
      - "5434:5432"
    networks:
      - backend2_network

  # Leader Node
  backend:
    environment:
      - DB_HOST_NAME=pg_db
    build:
      context: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - pg_db
    networks:
      - backend_network
      - backends_connector_network
      - frontend_backend_network  # REMOVE THIS NETWORK AND ADD TO ANOTHER NODE TO CHANGE LEADER NODE

  backend1:
    environment:
      - DB_HOST_NAME=pg_db_1
    build:
      context: .
    volumes:
      - .:/app
    ports:
      - "8001:8000"
    depends_on:
      - pg_db_1
    networks:
      - backend1_network
      - backends_connector_network

  backend2:
    environment:
      - DB_HOST_NAME=pg_db_2
    build:
      context: .
    volumes:
      - .:/app
    ports:
      - "8002:8000"
    depends_on:
      - pg_db_2
    networks:
      - backend2_network
      - backends_connector_network

  frontend:
    environment:
      - Leader_Node_HOST_NAME=backend  # CHANGE TO CHANGE THE LEADER NODE
    build:
      context: ../../dsfrontend/
    volumes:
      - .:/frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - backend1
      - backend2
    networks:
      - frontend_backend_network

volumes:
  pg_volume:  # volume for pg_db
  pg_volume_1:  # volume for pg_db_1
  pg_volume_2:  # volume for pg_db_2

networks:
  backend_network:  # bridges backend, pg_db
  backend1_network:  # bridges backend1, pg_db_1
  backend2_network:  # bridges backend2, pg_db_2
  backends_connector_network:  # bridges backend, backend1, backend2
  frontend_backend_network:  # bridges frontend, backend